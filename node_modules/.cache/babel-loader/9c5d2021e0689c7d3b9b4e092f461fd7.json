{"ast":null,"code":"var _jsxFileName = \"/home/andy/Documents/Projects/typescript-avatar/src/components/TextGenerator.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { random, names, animals } from '../words';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextGenerator = props => {\n  _s();\n\n  const wordsArray = random.concat(animals).concat(names);\n  const shuffledWords = shuffleArray(wordsArray);\n  const paragraphs = [];\n  useEffect(() => {\n    for (let i = 0; i < props.paragraphs; i++) {\n      console.log(i);\n      const newParagraph = shuffledWords.slice(0, 100);\n      paragraphs.push(newParagraph);\n      console.log(paragraphs);\n    }\n  }, [props.paragraphs]);\n  const mappedParagraphs = paragraphs.map(paragraph => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: paragraph\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 63\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.paragraphs, paragraphs]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}; // https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n\n\n_s(TextGenerator, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TextGenerator;\n\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n\n  return array;\n}\n\nexport default TextGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextGenerator\");","map":{"version":3,"sources":["/home/andy/Documents/Projects/typescript-avatar/src/components/TextGenerator.tsx"],"names":["React","random","names","animals","useEffect","TextGenerator","props","wordsArray","concat","shuffledWords","shuffleArray","paragraphs","i","console","log","newParagraph","slice","push","mappedParagraphs","map","paragraph","array","length","j","Math","floor","temp"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,UAAvC;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAMA,MAAMC,aAA8B,GAAIC,KAAD,IAAW;AAAA;;AAE9C,QAAMC,UAAwB,GAAGN,MAAM,CAACO,MAAP,CAAcL,OAAd,EAAuBK,MAAvB,CAA8BN,KAA9B,CAAjC;AACA,QAAMO,aAAa,GAAGC,YAAY,CAACH,UAAD,CAAlC;AAGA,QAAMI,UAAc,GAAG,EAAvB;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACK,UAA1B,EAAsCC,CAAC,EAAvC,EAA2C;AAEvCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,YAAMG,YAAY,GAAGN,aAAa,CAACO,KAAd,CAAoB,CAApB,EAAsB,GAAtB,CAArB;AACAL,MAAAA,UAAU,CAACM,IAAX,CAAgBF,YAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACH;AACJ,GARQ,EAQN,CAACL,KAAK,CAACK,UAAP,CARM,CAAT;AAUI,QAAMO,gBAAgB,GAAGP,UAAU,CAACQ,GAAX,CAAeC,SAAS,iBAAK;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,UAA7B,CAAzB;AAEJ,sBAGI;AAAA,eACKd,KAAK,CAACK,UADX,EAEKA,UAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAQH,CA5BD,C,CA8BA;;;GA9BMN,a;;KAAAA,a;;AA+BN,SAASK,YAAT,CAAsBW,KAAtB,EAA4C;AACxC,OAAK,IAAIT,CAAC,GAAGS,KAAK,CAACC,MAAN,GAAe,CAA5B,EAA+BV,CAAC,GAAG,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACvC,QAAIW,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACvB,MAAL,MAAiBW,CAAC,GAAG,CAArB,CAAX,CAAR;AACA,QAAIc,IAAI,GAAGL,KAAK,CAACT,CAAD,CAAhB;AACAS,IAAAA,KAAK,CAACT,CAAD,CAAL,GAAWS,KAAK,CAACE,CAAD,CAAhB;AACAF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAWG,IAAX;AACH;;AACD,SAAOL,KAAP;AACH;;AAGD,eAAehB,aAAf","sourcesContent":["import React from 'react';\nimport { random, names, animals } from '../words';\nimport { useEffect } from 'react';\n\ninterface Props {\n    paragraphs: number,\n}\n\nconst TextGenerator: React.FC<Props> = (props) => {\n\n    const wordsArray:Array<string> = random.concat(animals).concat(names);\n    const shuffledWords = shuffleArray(wordsArray)\n\n\n    const paragraphs:any = [];\n\n    useEffect(() => {\n        for (let i = 0; i < props.paragraphs; i++) {\n\n            console.log(i);\n            const newParagraph = shuffledWords.slice(0,100);\n            paragraphs.push(newParagraph);\n            console.log(paragraphs)\n        }\n    }, [props.paragraphs])\n\n        const mappedParagraphs = paragraphs.map(paragraph => (<p>{paragraph}</p>))\n\n    return (\n\n\n        <div>\n            {props.paragraphs}\n            {paragraphs}\n        </div>\n    )\n}\n\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nfunction shuffleArray(array: Array<string>) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n}\n\n\nexport default TextGenerator;"]},"metadata":{},"sourceType":"module"}