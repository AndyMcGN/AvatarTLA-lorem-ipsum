[{"/home/andy/Documents/Projects/typescript-avatar/src/index.tsx":"1","/home/andy/Documents/Projects/typescript-avatar/src/reportWebVitals.ts":"2","/home/andy/Documents/Projects/typescript-avatar/src/App.tsx":"3","/home/andy/Documents/Projects/typescript-avatar/src/components/Form.tsx":"4","/home/andy/Documents/Projects/typescript-avatar/src/components/TextGenerator.tsx":"5","/home/andy/Documents/Projects/typescript-avatar/src/words.ts":"6"},{"size":515,"mtime":1624625597178,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1624625597178,"results":"9","hashOfConfig":"8"},{"size":937,"mtime":1625502818383,"results":"10","hashOfConfig":"8"},{"size":1182,"mtime":1624625597178,"results":"11","hashOfConfig":"8"},{"size":1872,"mtime":1625502879043,"results":"12","hashOfConfig":"8"},{"size":2747,"mtime":1624625597178,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"hkhpa2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/andy/Documents/Projects/typescript-avatar/src/index.tsx",[],["28","29"],"/home/andy/Documents/Projects/typescript-avatar/src/reportWebVitals.ts",[],"/home/andy/Documents/Projects/typescript-avatar/src/App.tsx",[],"/home/andy/Documents/Projects/typescript-avatar/src/components/Form.tsx",[],"/home/andy/Documents/Projects/typescript-avatar/src/components/TextGenerator.tsx",["30"],"import React from 'react';\nimport { random, names, animals } from '../words';\nimport { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome' \nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\n\n\ninterface Props {\n    paragraphs: number,\n}\n\nconst TextGenerator: React.FC<Props> = (props) => {\n\n    const [generatedText, setGeneratedText] = useState(['']);\n\n    const wordsArray:Array<string> = random.concat(animals).concat(names);\n\n\n    useEffect(() => {\n\n        const allParagraphs = makeAllParagraphs();\n        setGeneratedText(allParagraphs);\n\n    }, [props.paragraphs]);\n\n    const makeAllParagraphs = () => {\n\n        const paragraphs:string[] = [];\n        for (let i = 0; i < props.paragraphs; i++) {\n            const paragraph = makeParagraph();\n            paragraphs.push(paragraph);\n        }\n\n        return paragraphs;\n    }\n\n    const makeParagraph = () => {\n        const paragraph: string[] = [];\n        for (let j = 0; j < 40; j++) {\n            let word = wordsArray[Math.floor(Math.random() * wordsArray.length)];\n            paragraph.push(word);\n        }\n        return paragraph.join(' ');\n    }\n\n    const mappedText = generatedText.map(paragraph => (<p>{paragraph}</p>));\n\n    const copyText = () => {\n        const selectableText = document.createElement('textarea')\n        document.body.appendChild(selectableText);\n        selectableText.value = generatedText.join('\\n');\n        selectableText.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(selectableText);\n    \n    }\n\n    return (\n        <div className=\"generatedText\">\n            {mappedText}\n            {props.paragraphs > 0 && <button onClick={() => {copyText()}}><FontAwesomeIcon icon={faClipboard} size='lg'/>Copy text</button>}\n        </div>\n    )\n}\n\nexport default TextGenerator;","/home/andy/Documents/Projects/typescript-avatar/src/words.ts",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":24,"column":8,"nodeType":"37","endLine":24,"endColumn":26,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeAllParagraphs'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [makeAllParagraphs, props.paragraphs]",{"range":"44","text":"45"},[617,635],"[makeAllParagraphs, props.paragraphs]"]